export const getPythonLessonPrompt = (lessonId: string) => {
  const [blockIndex, lessonIndex] = lessonId.split("-").map(Number);
  
  const blocks = [
    {
      title: "Введение в программирование и установка Python",
      lessons: [
        {
          title: "Знакомство с Python",
          prompt: `Расскажи подробно о языке Python:
            - История создания и философия языка
            - Почему Python считается лучшим для начинающих
            - Какие компании используют Python
            - Сколько времени нужно на освоение базового Python
            - Средняя зарплата Python-разработчика в России
            - Какие направления разработки доступны
            Используй конкретные примеры и статистику.`
        },
        {
          title: "Установка Python",
          prompt: `Объясни пошагово процесс установки Python:
            - Какую версию выбрать для обучения
            - Как проверить успешность установки
            - Что делать при возникновении ошибок
            - Зачем нужны переменные среды PATH
            - Как установить несколько версий Python
            Добавь конкретные команды и скриншоты где это уместно.`
        },
        {
          title: "Настройка редактора кода",
          prompt: `Расскажи о настройке среды разработки:
            - Какой редактор выбрать начинающему
            - Необходимые плагины VS Code для Python
            - Как настроить автоформатирование
            - Отличия PyCharm от VS Code
            - Настройка отладчика
            Приведи примеры настроек и конфигураций.`
        },
        {
          title: "Проверка установки Python",
          prompt: `Объясни как проверить корректность установки Python:
            - Запуск Python через командную строку
            - Основные команды терминала
            - Создание и запуск первой программы
            - Использование IDLE
            - Проверка установленных пакетов
            Добавь примеры команд и кода.`
        }
      ]
    },
    {
      title: "Основы программирования на Python",
      lessons: [
        {
          title: "Переменные и типы данных",
          prompt: `Объясни основы работы с переменными в Python:
            - Что такое переменные и зачем они нужны
            - Основные типы данных (int, float, str, bool)
            - Правила именования переменных
            - Преобразование типов данных
            - Примеры использования
            Добавь много примеров кода.`
        },
        {
          title: "Ввод и вывод данных",
          prompt: `Расскажи о работе с вводом и выводом в Python:
            - Функция input() и её особенности
            - Функция print() и её параметры
            - Форматирование строк (f-strings, format())
            - Работа с разными типами данных
            - Обработка ошибок при вводе
            Добавь примеры кода для каждого случая.`
        },
        {
          title: "Условные операторы",
          prompt: `Объясни работу условных операторов в Python:
            - Оператор if и его синтаксис
            - Использование elif и else
            - Вложенные условия
            - Логические операторы (and, or, not)
            - Тернарный оператор
            Приведи практические примеры использования.`
        },
        {
          title: "Циклы",
          prompt: `Объясни работу циклов в Python:
            - Цикл for и его применение
            - Цикл while и его особенности
            - Операторы break и continue
            - Функция range() и её параметры
            - Вложенные циклы
            - Обработка последовательностей
            Добавь примеры кода для разных типов задач:
            - Подсчет суммы чисел
            - Поиск элементов в списке
            - Обработка строк
            - Создание простых игровых циклов
            Покажи как избежать бесконечных циклов и типичные ошибки.`
        },
        {
          title: "Коллекции данных",
          prompt: `Расскажи о работе с коллекциями данных в Python:
            - Списки и их методы
            - Кортежи и их особенности
            - Словари и их применение
            - Множества и операции с ними
            - Сравнение разных типов коллекций
            Добавь примеры работы с каждым типом.`
        },
        {
          title: "Функции",
          prompt: `Объясни работу с функциями в Python:
            - Создание и вызов функций
            - Параметры и аргументы
            - Возвращаемые значения
            - Область видимости переменных
            - Документирование функций
            Приведи примеры создания разных типов функций.`
        }
      ]
    }
  ];

  const block = blocks[blockIndex - 1];
  const lesson = block?.lessons[lessonIndex - 1];

  if (!block || !lesson) {
    console.error(`Invalid lesson ID: ${lessonId}, Block: ${blockIndex}, Lesson: ${lessonIndex}`);
    throw new Error(`Урок ${lessonId} не найден. Пожалуйста, проверьте правильность ID урока.`);
  }

  console.log(`Generated prompt for lesson ${lessonId}: ${lesson.title}`);
  return lesson.prompt;
};