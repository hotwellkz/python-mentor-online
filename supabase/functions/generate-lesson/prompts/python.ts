export const getPythonLessonPrompt = (lessonId: string) => {
  const [blockIndex, lessonIndex] = lessonId.split("-").map(Number);
  
  const blocks = [
    {
      title: "Введение в программирование и установка Python",
      lessons: [
        {
          title: "Знакомство с Python",
          prompt: `Расскажи подробно о языке Python:
            - История создания и философия языка
            - Почему Python считается лучшим для начинающих
            - Какие компании используют Python
            - Сколько времени нужно на освоение базового Python
            - Средняя зарплата Python-разработчика в России
            - Какие направления разработки доступны
            Используй конкретные примеры и статистику.`
        },
        {
          title: "Установка Python",
          prompt: `Объясни пошагово процесс установки Python:
            - Какую версию выбрать для обучения
            - Как проверить успешность установки
            - Что делать при возникновении ошибок
            - Зачем нужны переменные среды PATH
            - Как установить несколько версий Python
            Добавь конкретные команды и скриншоты где это уместно.`
        },
        {
          title: "Настройка редактора кода",
          prompt: `Расскажи о настройке среды разработки:
            - Какой редактор выбрать начинающему
            - Необходимые плагины VS Code для Python
            - Как настроить автоформатирование
            - Отличия PyCharm от VS Code
            - Настройка отладчика
            Приведи примеры настроек и конфигураций.`
        },
        {
          title: "Проверка установки Python",
          prompt: `Объясни как проверить корректность установки Python:
            - Запуск Python через командную строку
            - Основные команды терминала
            - Создание и запуск первой программы
            - Использование IDLE
            - Проверка установленных пакетов
            Добавь примеры команд и кода.`
        }
      ]
    },
    {
      title: "Основы программирования на Python",
      lessons: [
        {
          title: "Переменные и типы данных",
          prompt: `Объясни основы работы с переменными в Python:
            - Что такое переменные и зачем они нужны
            - Основные типы данных (int, float, str, bool)
            - Правила именования переменных
            - Преобразование типов данных
            - Примеры использования
            Добавь много примеров кода.`
        },
        {
          title: "Ввод и вывод данных",
          prompt: `Расскажи о работе с вводом и выводом в Python:
            - Функция input() и её особенности
            - Функция print() и её параметры
            - Форматирование строк (f-strings, format())
            - Работа с разными типами данных
            - Обработка ошибок при вводе
            Добавь примеры кода для каждого случая.`
        },
        {
          title: "Условные операторы",
          prompt: `Объясни работу условных операторов в Python:
            - Оператор if и его синтаксис
            - Использование elif и else
            - Вложенные условия
            - Логические операторы (and, or, not)
            - Тернарный оператор
            Приведи практические примеры использования.`
        },
        {
          title: "Циклы",
          prompt: `Объясни работу циклов в Python:
            - Цикл for и его применение
            - Цикл while и его особенности
            - Операторы break и continue
            - Функция range() и её параметры
            - Вложенные циклы
            - Обработка последовательностей
            Добавь примеры кода для разных типов задач:
            - Подсчет суммы чисел
            - Поиск элементов в списке
            - Обработка строк
            - Создание простых игровых циклов
            Покажи как избежать бесконечных циклов и типичные ошибки.`
        },
        {
          title: "Коллекции данных",
          prompt: `Расскажи о работе с коллекциями данных в Python:
            - Списки и их методы
            - Кортежи и их особенности
            - Словари и их применение
            - Множества и операции с ними
            - Сравнение разных типов коллекций
            Добавь примеры работы с каждым типом.`
        },
        {
          title: "Функции",
          prompt: `Объясни работу с функциями в Python:
            - Создание и вызов функций
            - Параметры и аргументы
            - Возвращаемые значения
            - Область видимости переменных
            - Документирование функций
            Приведи примеры создания разных типов функций.`
        }
      ]
    },
    {
      title: "Работа с модулями и файлами",
      lessons: [
        {
          title: "Модули и пакеты",
          prompt: `Объясни работу с модулями в Python:
            - Что такое модули и зачем они нужны
            - Как импортировать модули
            - Создание собственных модулей
            - Работа с пакетами
            - Структура проекта с модулями
            Приведи практические примеры создания и использования модулей.`
        },
        {
          title: "Работа с файлами",
          prompt: `Расскажи о работе с файлами в Python:
            - Открытие и закрытие файлов
            - Чтение и запись текстовых файлов
            - Работа с JSON файлами
            - Обработка ошибок при работе с файлами
            - Менеджеры контекста (with)
            Добавь примеры кода для разных операций с файлами.`
        },
        {
          title: "Виртуальные окружения",
          prompt: `Объясни работу с виртуальными окружениями:
            - Что такое виртуальное окружение и зачем оно нужно
            - Создание виртуального окружения через venv
            - Активация и деактивация окружения
            - Установка пакетов через pip
            - Создание requirements.txt
            Приведи пошаговые инструкции с примерами команд.`
        }
      ]
    },
    {
      title: "Исключения и отладка",
      lessons: [
        {
          title: "Обработка исключений",
          prompt: `Объясни работу с исключениями в Python:
            - Что такое исключения и зачем они нужны
            - Конструкция try-except
            - Типы встроенных исключений
            - Создание собственных исключений
            - Блоки finally и else
            Добавь примеры обработки разных типов ошибок.`
        },
        {
          title: "Отладка программ",
          prompt: `Расскажи об отладке программ на Python:
            - Инструменты отладки
            - Использование точек останова
            - Отладка через print()
            - Работа с отладчиком в VS Code
            - Типичные ошибки и их исправление
            Приведи практические примеры отладки кода.`
        }
      ]
    },
    {
      title: "Работа с библиотеками",
      lessons: [
        {
          title: "Популярные встроенные модули",
          prompt: `Расскажи о встроенных модулях Python:
            - Обзор популярных встроенных модулей
            - Работа с datetime для дат и времени
            - Использование random для генерации случайных чисел
            - Математические функции из модуля math
            - Работа с файловой системой через os
            Приведи примеры использования каждого модуля.`
        },
        {
          title: "Установка сторонних библиотек",
          prompt: `Объясни работу с внешними библиотеками:
            - Установка библиотек через pip
            - Работа с requirements.txt
            - Создание виртуального окружения
            - Обновление библиотек
            - Управление зависимостями
            Добавь примеры команд и конфигураций.`
        },
        {
          title: "Полезные библиотеки для Python-разработчика",
          prompt: `Расскажи о популярных библиотеках Python:
            - Библиотеки для работы с данными (pandas, numpy)
            - HTTP-запросы с requests
            - Веб-фреймворки (Flask, Django)
            - Работа с Excel (openpyxl)
            - Библиотеки для анализа данных
            Приведи примеры использования каждой библиотеки.`
        }
      ]
    },
    {
      title: "Автоматизация",
      lessons: [
        {
          title: "Автоматизация задач",
          prompt: `Расскажи об автоматизации задач с Python:
            - Какие задачи можно автоматизировать
            - Работа с файловой системой
            - Создание скриптов автоматизации
            - Планировщик задач
            - Аргументы командной строки
            Приведи практические примеры автоматизации.`
        },
        {
          title: "Работа с Excel и PDF",
          prompt: `Объясни работу с документами в Python:
            - Чтение и запись Excel файлов
            - Создание и модификация PDF
            - Извлечение данных из PDF
            - Форматирование в Excel
            - Автоматизация отчетности
            Добавь примеры кода для работы с документами.`
        }
      ]
    },
    {
      title: "Карьерное развитие",
      lessons: [
        {
          title: "Чистый код и PEP8",
          prompt: `Расскажи о стандартах кодирования Python:
            - Основные правила PEP8
            - Автоматическое форматирование кода
            - Инструменты проверки качества кода
            - Написание документации
            - Принципы чистого кода
            Приведи примеры хорошего и плохого кода.`
        },
        {
          title: "Создание портфолио и GitHub",
          prompt: `Объясни как создать портфолио Python-разработчика:
            - Какие проекты включить в портфолио
            - Оформление README.md
            - Важные метрики на GitHub
            - Ведение истории коммитов
            - Демонстрация навыков
            Добавь примеры хороших проектов для портфолио.`
        },
        {
          title: "Подготовка к собеседованию",
          prompt: `Расскажи о подготовке к собеседованиям:
            - Алгоритмические задачи
            - Подготовка к техническому собеседованию
            - Частые вопросы по Python
            - Прохождение тестовых заданий
            - Презентация проектов
            Приведи примеры типичных задач и вопросов.`
        }
      ]
    }
  ];

  const block = blocks[blockIndex - 1];
  const lesson = block?.lessons[lessonIndex - 1];

  if (!block || !lesson) {
    console.error(`Invalid lesson ID: ${lessonId}, Block: ${blockIndex}, Lesson: ${lessonIndex}`);
    throw new Error(`Урок ${lessonId} не найден. Пожалуйста, проверьте правильность ID урока.`);
  }

  console.log(`Generated prompt for lesson ${lessonId}: ${lesson.title}`);
  return lesson.prompt;
};