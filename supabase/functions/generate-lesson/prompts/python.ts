export const getPythonLessonPrompt = (lessonId: string) => {
  const [blockIndex, lessonIndex] = lessonId.split("-").map(Number);
  
  const blocks = [
    {
      title: "Введение в программирование и установка Python",
      lessons: [
        {
          title: "Знакомство с Python",
          prompt: `Расскажи подробно о языке Python:
          - Почему Python считается лучшим для начинающих
          - Какие компании используют Python
          - Сколько времени нужно на освоение базового Python
          - Средняя зарплата Python-разработчика в России
          - Какие направления разработки доступны
          Используй конкретные примеры и статистику.`
        },
        {
          title: "Установка Python",
          prompt: `Объясни пошагово процесс установки Python:
          - Какую версию выбрать для обучения
          - Как проверить успешность установки
          - Что делать при возникновении ошибок
          - Зачем нужны переменные среды PATH
          - Как установить несколько версий Python
          Добавь конкретные команды и скриншоты где это уместно.`
        },
        {
          title: "Настройка редактора кода",
          prompt: `Расскажи о настройке среды разработки:
          - Какой редактор выбрать начинающему
          - Необходимые плагины VS Code для Python
          - Как настроить автоформатирование
          - Отличия PyCharm от VS Code
          - Настройка отладчика
          Приведи примеры настроек и конфигураций.`
        },
        {
          title: "Проверка установки Python",
          prompt: `Объясни как проверить корректность установки Python:
          - Запуск Python через командную строку
          - Основные команды терминала
          - Создание и запуск первой программы
          - Использование IDLE
          - Проверка установленных пакетов
          Добавь примеры команд и кода.`
        }
      ]
    },
    {
      title: "Основы программирования на Python",
      lessons: [
        {
          title: "Переменные и типы данных",
          prompt: `Объясни концепцию переменных и типов данных в Python:
          - Что такое переменные и как их создавать
          - Основные типы данных (int, float, str, bool)
          - Преобразование типов данных
          - Правила именования переменных
          - Работа с разными типами данных
          Используй много примеров кода.`
        },
        {
          title: "Ввод и вывод данных",
          prompt: `Расскажи о вводе и выводе данных в Python:
          - Функция print() и её возможности
          - Функция input() и работа с ней
          - Форматирование строк
          - Работа с разными типами данных при вводе
          - Обработка ошибок при вводе
          Добавь практические примеры.`
        },
        {
          title: "Условные операторы",
          prompt: `Объясни работу условных операторов:
          - Оператор if-elif-else
          - Логические операторы (and, or, not)
          - Операторы сравнения
          - Вложенные условия
          - Тернарный оператор
          Приведи примеры использования.`
        },
        {
          title: "Циклы",
          prompt: `Расскажи о циклах в Python:
          - Цикл for и его применение
          - Цикл while и его особенности
          - Операторы break и continue
          - Вложенные циклы
          - Итерация по последовательностям
          Добавь примеры разных циклов.`
        },
        {
          title: "Коллекции данных",
          prompt: `Объясни работу с коллекциями данных:
          - Списки и операции с ними
          - Кортежи и их особенности
          - Словари и методы работы
          - Множества и их применение
          - Вложенные структуры данных
          Используй практические примеры.`
        },
        {
          title: "Функции",
          prompt: `Расскажи о функциях в Python:
          - Создание и вызов функций
          - Параметры и аргументы
          - Возвращаемые значения
          - Область видимости переменных
          - Лямбда-функции
          Добавь примеры разных функций.`
        }
      ]
    },
    {
      title: "Работа с библиотеками",
      lessons: [
        {
          title: "Популярные встроенные модули",
          prompt: `Расскажи о встроенных модулях Python:
          - Модуль math для математических операций
          - Модуль random для генерации случайных чисел
          - Модуль datetime для работы с датами
          - Модуль os для работы с операционной системой
          - Модуль json для работы с JSON
          Приведи примеры использования каждого модуля.`
        },
        {
          title: "Установка сторонних библиотек",
          prompt: `Объясни процесс работы с внешними библиотеками:
          - Использование pip
          - Создание виртуального окружения
          - Управление зависимостями
          - Работа с requirements.txt
          - Обновление и удаление пакетов
          Добавь примеры команд.`
        },
        {
          title: "Полезные библиотеки для Python-разработчика",
          prompt: `Расскажи о популярных библиотеках:
          - NumPy для научных вычислений
          - Pandas для анализа данных
          - Requests для HTTP-запросов
          - Pillow для работы с изображениями
          - Beautiful Soup для парсинга
          Приведи примеры кода для каждой библиотеки.`
        }
      ]
    },
    {
      title: "Основы веб-разработки на Python",
      lessons: [
        {
          title: "Введение во Flask",
          prompt: `Расскажи о веб-фреймворке Flask:
          - Установка и настройка Flask
          - Создание первого приложения
          - Маршрутизация и представления
          - Обработка запросов
          - Работа с конфигурацией
          Добавь примеры кода.`
        },
        {
          title: "Шаблонизация",
          prompt: `Объясни работу с шаблонами во Flask:
          - Jinja2 шаблонизатор
          - Создание базового шаблона
          - Наследование шаблонов
          - Передача данных в шаблоны
          - Фильтры и макросы
          Приведи примеры шаблонов.`
        },
        {
          title: "Обработка форм и запросов",
          prompt: `Расскажи о работе с формами:
          - Создание HTML-форм
          - Методы GET и POST
          - Валидация данных
          - Загрузка файлов
          - Обработка ошибок
          Добавь примеры обработки форм.`
        },
        {
          title: "Основы REST API",
          prompt: `Объясни принципы REST API:
          - Что такое REST API
          - HTTP методы
          - Форматы данных
          - Статусы ответов
          - Тестирование API
          Приведи примеры API endpoints.`
        }
      ]
    },
    {
      title: "Продвинутые темы",
      lessons: [
        {
          title: "Асинхронное программирование",
          prompt: `Расскажи об асинхронном программировании:
          - Async и await
          - Корутины
          - Event loop
          - Асинхронные библиотеки
          - Параллельное выполнение задач
          Добавь примеры асинхронного кода.`
        },
        {
          title: "Параллельность и многопоточность",
          prompt: `Объясни работу с потоками и процессами:
          - Многопоточность в Python
          - Многопроцессорность
          - GIL и его влияние
          - Синхронизация потоков
          - Пулы потоков и процессов
          Приведи примеры параллельного выполнения.`
        },
        {
          title: "Архитектура и паттерны",
          prompt: `Расскажи о паттернах проектирования:
          - ООП в Python
          - Основные паттерны проектирования
          - SOLID принципы
          - Чистая архитектура
          - Рефакторинг кода
          Добавь примеры реализации паттернов.`
        }
      ]
    }
  ];

  const block = blocks[blockIndex - 1];
  const lesson = block?.lessons[lessonIndex - 1];

  if (!block || !lesson) {
    throw new Error(`Invalid lesson ID: ${lessonId}`);
  }

  return lesson.prompt;
};